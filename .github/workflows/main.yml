name: Build Android APK

on:
  workflow_dispatch:

jobs:
  build:
    name: Clean Build and Sign APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: /wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +xkeystore
          keytool -genkey -v -keystore .github/keystore/debug.keystore \
            -alias androiddebugkey -storepass android -keypass android \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=Android Debug,O: |
          ./gradlew assembleDebug echo "Debug build failed. Check errors_only.txt for details."
            exit 1
          }

      - name: Build Release APK and extract errors
        id: build
        continue-on-error: true
        run: |
          ./gradlew assembleRelease --stacktrace --info|resource linking failed|resource .+ not found" build_output.txt > errors_only.txt || true

          if [ ! -s errors_only.txt ]; then
            echo "No error patterns detected in the last 1000 lines." > errors_only.txt
            tail -n 30 build_output.txt >> errors_only.txt github.run_number }}
          path: errors_only.txt
          retention-days: 7

      - name: Check APK existence
        id: check_apk
        if: steps.build.outcome == 'success'
        run: |
          if [ -f "app/build/outputs/apk/release/app-release.apk" 'true'
        run: |
          ZIPALIGN=$(find $ANDROID_HOME/build-tools -name zipalign | sort -r | head -n 1)
          APKSIGNER=$(find $ANDROID_HOME/build-tools -name apksigner | sort -r | head -n 1)

          echo "Using zipalign-signed.apk \
            aligned.apk

          $APKSIGNER verify --verbose app-release-signed.apk

      - name: Upload final signed APK
        if: env.APK_EXISTS == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: WhatsAppCleanerPro-Signed: env.APK_EXISTS != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: Debug-APK-${{ github.run_number }}
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 7
